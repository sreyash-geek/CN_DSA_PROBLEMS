// Following is the node structure
/**************
class node{
public:
    int data;
    node * next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};
***************/
int length(node *head) {
    int a = 0;
    while(head != NULL){
        a++;
        head = head->next;
    }
    return a;
}

node* append_LinkedList(node* head,int n)
{
    int size = length(head);
    
    int a = 0;
    node* temp1 = head;
    node* temp2;
    for( int i = 0; i < size ; i++){
        if(size - i == n){
            temp2 = temp1;
            break;
        }
        temp1 = temp1->next;
    }
    temp1 = temp2;
    for( ; temp2->next != NULL; ){
        temp2 = temp2->next;
    }
    
    node* temp3 = head;
    for(int i = 0; i < size - n; i++){
        node* t = new node(temp3->data);
        temp3 = temp3->next;
        temp2->next = t;
        temp2 = temp2->next;
    }
    return temp1;
    
    
}



Node *takeinput()
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;
	while (data != -1)
	{
		Node *newnode = new Node(data);
		if (head == NULL)
		{
			head = newnode;
			tail = newnode;
		}
		else
		{
			tail->next = newnode;
			tail = newnode;
		}
		cin >> data;
	}
	return head;
}


void print(Node *head)
{
	Node *temp = head;
	while (temp != NULL)
	{
		cout << temp->data << " ";
		temp = temp->next;
	}
	cout << endl;
}



int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		Node *head = takeinput();
		int n;
		cin >> n;
		head = appendLastNToFirst(head, n);
		print(head);
	}
	return 0;
}